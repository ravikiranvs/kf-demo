# PIPELINE DEFINITION
# Name: query-milvus-pipeline
components:
  comp-query-milvus:
    executorLabel: exec-query-milvus
    inputDefinitions:
      parameters:
        collection_name:
          defaultValue: rag_embeddings
          isOptional: true
          parameterType: STRING
        milvus_host:
          defaultValue: standalone-milvus.milvus.svc.cluster.local
          isOptional: true
          parameterType: STRING
        milvus_port:
          defaultValue: 19530.0
          isOptional: true
          parameterType: NUMBER_INTEGER
deploymentSpec:
  executors:
    exec-query-milvus:
      container:
        args:
        - --executor_input
        - '{{$}}'
        - --function_to_execute
        - query_milvus
        command:
        - sh
        - -c
        - "\nif ! [ -x \"$(command -v pip)\" ]; then\n    python3 -m ensurepip ||\
          \ python3 -m ensurepip --user || apt-get install python3-pip\nfi\n\nPIP_DISABLE_PIP_VERSION_CHECK=1\
          \ python3 -m pip install --quiet --no-warn-script-location 'kfp==2.11.0'\
          \ '--no-deps' 'typing-extensions>=3.7.4,<5; python_version<\"3.9\"'  &&\
          \  python3 -m pip install --quiet --no-warn-script-location 'pymilvus' 'numpy'\
          \ && \"$0\" \"$@\"\n"
        - sh
        - -ec
        - 'program_path=$(mktemp -d)


          printf "%s" "$0" > "$program_path/ephemeral_component.py"

          _KFP_RUNTIME=true python3 -m kfp.dsl.executor_main                         --component_module_path                         "$program_path/ephemeral_component.py"                         "$@"

          '
        - "\nimport kfp\nfrom kfp import dsl\nfrom kfp.dsl import *\nfrom typing import\
          \ *\n\ndef query_milvus(\n    milvus_host: str = 'standalone-milvus.milvus.svc.cluster.local',\n\
          \    milvus_port: int = 19530,\n    collection_name: str = 'rag_embeddings'\n\
          ):\n    from pymilvus import connections, Collection\n    import numpy as\
          \ np\n\n    # Connect to Milvus\n    connections.connect(alias=\"default\"\
          , host=milvus_host, port=milvus_port)\n    print(f\"Connected to Milvus\
          \ at {milvus_host}:{milvus_port}\")\n\n    collection = Collection(collection_name)\n\
          \    collection.load()\n\n    query_embedding = np.random.rand(768).tolist()\n\
          \n    results = collection.search(\n        data=[query_embedding],\n  \
          \      anns_field=\"embedding\",\n        param={\"metric_type\": \"L2\"\
          , \"params\": {\"nprobe\": 10}},\n        limit=5,\n        output_fields=[\"\
          chunk_id\", \"text\", \"source_file\"]\n    )\n\n    for hit in results[0]:\n\
          \        print(f\"Chunk ID: {hit.entity.get('chunk_id')}\")\n        print(f\"\
          Text: {hit.entity.get('text')}\")\n        print(f\"Source File: {hit.entity.get('source_file')}\"\
          )\n        print(f\"Distance: {hit.distance}\\n\")\n\n"
        image: python:3.9
pipelineInfo:
  name: query-milvus-pipeline
root:
  dag:
    tasks:
      query-milvus:
        cachingOptions:
          enableCache: true
        componentRef:
          name: comp-query-milvus
        taskInfo:
          name: query-milvus
schemaVersion: 2.1.0
sdkVersion: kfp-2.11.0
